networks:
  reverse_proxy:
    name: reverse_proxy
    external: true
  internet:
    name: internet
    external: true

services:
  firefox:
    image: jlesage/firefox
    container_name: firefox
    restart: unless-stopped
    network_mode: container:vpn

  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${GENERAL_TIMEZONE}
      - WEBUI_PORT=8090
    volumes:
      - ${GENERAL_BASE_DOCKER_CONFIG_PATH}/qbittorrent:/config
      - ${GENERAL_BASE_DOCKER_DATA_PATH}/qbittorrent/downloads:/downloads
    network_mode: container:vpn

  plex:
    image: linuxserver/plex:latest
    container_name: plex
    restart: unless-stopped
    environment:
      - TZ=${GENERAL_TIMEZONE}
      - PUID=1000
      - PGID=1000
      - VERSION=docker
    volumes:
      - ${GENERAL_BASE_DOCKER_DATA_PATH}/plex/config:/config
      - ${GENERAL_BASE_DOCKER_DATA_PATH}/plex/data:/data
      - ${GENERAL_BASE_DOCKER_DATA_PATH}/plex/temp:/transcode
      - ${GENERAL_BASE_DOCKER_MEDIA_PATH}/videos/movies:/movies
      - ${GENERAL_BASE_DOCKER_MEDIA_PATH}/videos/series:/series
      - ${GENERAL_BASE_DOCKER_MEDIA_PATH}/videos/youtube:/youtube
    networks:
      - reverse_proxy
    labels:
      traefik.enable: true
      traefik.http.routers.plex-router.rule: Host(`plex.${TRAEFIK_DOMAIN_NAME}`)
      traefik.http.routers.plex-router.entrypoints: websecure
      traefik.http.routers.plex-router.service: plex-service
      traefik.http.routers.plex-router.tls.certresolver: myresolver
      traefik.http.services.plex-service.loadbalancer.server.port: 32400
      traefik.http.services.plex-service.loadbalancer.server.scheme: http

  jellyfin:
    image: linuxserver/jellyfin:latest
    restart: unless-stopped
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${GENERAL_TIMEZONE}
    volumes:
      - ${GENERAL_BASE_DOCKER_DATA_PATH}/jellyfin/config:/config
      - ${GENERAL_BASE_DOCKER_DATA_PATH}/jellyfin/data:/data
      - ${GENERAL_BASE_DOCKER_MEDIA_PATH}/videos/movies:/movies
      - ${GENERAL_BASE_DOCKER_MEDIA_PATH}/videos/series:/series
      - ${GENERAL_BASE_DOCKER_MEDIA_PATH}/videos/youtube:/youtube
    networks:
      - reverse_proxy
    labels:
      traefik.enable: true
      traefik.http.routers.jellyfin-router.rule: Host(`jellyfin.${TRAEFIK_DOMAIN_NAME}`)
      traefik.http.routers.jellyfin-router.entrypoints: websecure
      traefik.http.routers.jellyfin-router.service: jellyfin-service
      traefik.http.routers.jellyfin-router.tls.certresolver: myresolver
      traefik.http.services.jellyfin-service.loadbalancer.server.port: 8096
      traefik.http.services.jellyfin-service.loadbalancer.server.scheme: http

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${GENERAL_TIMEZONE}
    volumes:
      - ${GENERAL_BASE_DOCKER_DATA_PATH}/prowlarr/configs:/config
    network_mode: container:vpn
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=1  # Recomended if using ipv4 onlydns:

  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    restart: unless-stopped 
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=${GENERAL_TIMEZONE}
    network_mode: container:vpn

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${GENERAL_TIMEZONE}
    volumes:
      - ${GENERAL_BASE_DOCKER_DATA_PATH}/radarr/config:/config
      - ${GENERAL_BASE_DOCKER_DATA_PATH}/qbittorrent/downloads:/downloads
      - ${GENERAL_BASE_DOCKER_MEDIA_PATH}/videos/movies:/movies
    network_mode: container:vpn

  
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${GENERAL_TIMEZONE}
    volumes:
      - ${GENERAL_BASE_DOCKER_DATA_PATH}/sonarr/config:/config
      - ${GENERAL_BASE_DOCKER_DATA_PATH}/qbittorrent/downloads:/downloads
      - ${GENERAL_BASE_DOCKER_MEDIA_PATH}/videos/series:/series
    network_mode: container:vpn
    
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${GENERAL_TIMEZONE}
    volumes:
      - ${GENERAL_BASE_DOCKER_DATA_PATH}/sonarr/config:/config
      - ${GENERAL_BASE_DOCKER_MEDIA_PATH}/videos/series:/series
      - ${GENERAL_BASE_DOCKER_MEDIA_PATH}/videos/movies:/movies
    network_mode: container:vpn

  ytdl_material:
    image: tzahi12345/youtubedl-material:nightly
    container_name: ytdl_material
    restart: unless-stopped
    volumes:
      - ${GENERAL_BASE_DOCKER_DATA_PATH}/youtube-dl/appdata:/app/appdata
      - ${GENERAL_BASE_DOCKER_MEDIA_PATH}/videos/youtube/audio:/app/audio
      - ${GENERAL_BASE_DOCKER_MEDIA_PATH}/videos/youtube/video:/app/video
      - ${GENERAL_BASE_DOCKER_MEDIA_PATH}/videos/youtube/subscriptions:/app/subscriptions
      - ${GENERAL_BASE_DOCKER_MEDIA_PATH}/videos/youtube/users:/app/users
    network_mode: container:vpn

  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${GENERAL_TIMEZONE}
    volumes:
      - ${GENERAL_BASE_DOCKER_DATA_PATH}/overseerr/config:/config
    networks:
      - reverse_proxy
    labels:
      traefik.enable: true
      traefik.http.routers.overseerr-router.rule: Host(`overseerr.${TRAEFIK_DOMAIN_NAME}`)
      traefik.http.routers.overseerr-router.entrypoints: websecure
      traefik.http.routers.overseerr-router.service: overseerr-service
      traefik.http.routers.overseerr-router.tls.certresolver: myresolver
      traefik.http.services.overseerr-service.loadbalancer.server.port: 5055
      traefik.http.services.overseerr-service.loadbalancer.server.scheme: http